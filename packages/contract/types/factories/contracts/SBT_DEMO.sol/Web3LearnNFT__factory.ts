/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Web3LearnNFT,
  Web3LearnNFTInterface,
} from "../../../contracts/SBT_DEMO.sol/Web3LearnNFT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct ERC721.NFT",
        name: "id",
        type: "tuple",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "_getNFT",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct ERC721.NFT[]",
        name: "nfts_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkIsMinted",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getIsMint",
    outputs: [
      {
        internalType: "bool[]",
        name: "isMints",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNFT",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct ERC721.NFT[]",
        name: "nfts",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506120e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610309578063b88d4fde14610325578063e932ad1914610341578063e985e9c51461035d57610100565b80636352211e146102495780636e13bd201461027957806370a08231146102a957806399f11010146102d957610100565b8063161a6c1e116100d3578063161a6c1e146101b15780631a66ab05146101e157806323b872dd1461021157806342842e0e1461022d57610100565b806301ffc9a71461010557806305bde45e14610135578063081812fc14610165578063095ea7b314610195575b600080fd5b61011f600480360381019061011a9190611085565b61038d565b60405161012c91906110cd565b60405180910390f35b61014f600480360381019061014a919061117c565b61045f565b60405161015c91906110cd565b60405180910390f35b61017f600480360381019061017a91906111bc565b61048e565b60405161018c91906111f8565b60405180910390f35b6101af60048036038101906101aa919061117c565b610495565b005b6101cb60048036038101906101c69190611213565b610499565b6040516101d891906113f8565b60405180910390f35b6101fb60048036038101906101f69190611213565b6104ab565b60405161020891906114d8565b60405180910390f35b61022b600480360381019061022691906114fa565b6104bd565b005b610247600480360381019061024291906114fa565b610531565b005b610263600480360381019061025e91906111bc565b610669565b60405161027091906111f8565b60405180910390f35b610293600480360381019061028e9190611213565b610670565b6040516102a091906114d8565b60405180910390f35b6102c360048036038101906102be9190611213565b61076c565b6040516102d0919061155c565b60405180910390f35b6102f360048036038101906102ee9190611213565b610823565b60405161030091906113f8565b60405180910390f35b610323600480360381019061031e91906115a3565b6109ee565b005b61033f600480360381019061033a9190611648565b610aeb565b005b61035b60048036038101906103569190611800565b610c98565b005b6103776004803603810190610372919061189f565b610caa565b60405161038491906110cd565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045857507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000919050565b5050565b60606104a482610823565b9050919050565b60606104b682610670565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461052c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105239061193c565b60405180910390fd5b505050565b61053c8383836104bd565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480610625575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b81526004016105c193929190611993565b6020604051808303816000875af11580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060491906119f2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610664576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065b90611a6b565b60405180910390fd5b505050565b6000919050565b60606000600367ffffffffffffffff81111561068f5761068e6116d5565b5b6040519080825280602002602001820160405280156106bd5781602001602082028036833780820191505090505b50905060005b600381101561076257600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff1682828151811061073d5761073c611a8b565b5b602002602001019015159081151581525050808061075a90611ae9565b9150506106c3565b5080915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d390611b7d565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156109e35783829060005260206000209060030201604051806060016040529081600082015481526020016001820180546108c090611bcc565b80601f01602080910402602001604051908101604052809291908181526020018280546108ec90611bcc565b80156109395780601f1061090e57610100808354040283529160200191610939565b820191906000526020600020905b81548152906001019060200180831161091c57829003601f168201915b5050505050815260200160028201805461095290611bcc565b80601f016020809104026020016040519081016040528092919081815260200182805461097e90611bcc565b80156109cb5780601f106109a0576101008083540402835291602001916109cb565b820191906000526020600020905b8154815290600101906020018083116109ae57829003601f168201915b50505050508152505081526020019060010190610883565b505050509050919050565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610adf91906110cd565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b519061193c565b60405180910390fd5b610b658585856104bd565b60008473ffffffffffffffffffffffffffffffffffffffff163b1480610c52575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b8152600401610bee959493929190611c2a565b6020604051808303816000875af1158015610c0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3191906119f2565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8890611a6b565b60405180910390fd5b5050505050565b610ca484848484610cd9565b50505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60038410610d1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1390611cc4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8290611d30565b60405180910390fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060009054906101000a900460ff16151503610e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2690611d9c565b60405180910390fd5b60006040518060600160405280868152602001848152602001838152509050600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610e9e90611ae9565b91905055506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001019081610f2a9190611f68565b506040820151816002019081610f409190611f68565b5050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f4da6a3240621d0cdfdabd4aa86427d9a0764e0ff7b9bc703ccf0505ceed780918360405161100a9190612091565b60405180910390a35050505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6110628161102d565b811461106d57600080fd5b50565b60008135905061107f81611059565b92915050565b60006020828403121561109b5761109a611023565b5b60006110a984828501611070565b91505092915050565b60008115159050919050565b6110c7816110b2565b82525050565b60006020820190506110e260008301846110be565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611113826110e8565b9050919050565b61112381611108565b811461112e57600080fd5b50565b6000813590506111408161111a565b92915050565b6000819050919050565b61115981611146565b811461116457600080fd5b50565b60008135905061117681611150565b92915050565b6000806040838503121561119357611192611023565b5b60006111a185828601611131565b92505060206111b285828601611167565b9150509250929050565b6000602082840312156111d2576111d1611023565b5b60006111e084828501611167565b91505092915050565b6111f281611108565b82525050565b600060208201905061120d60008301846111e9565b92915050565b60006020828403121561122957611228611023565b5b600061123784828501611131565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61127581611146565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112b557808201518184015260208101905061129a565b60008484015250505050565b6000601f19601f8301169050919050565b60006112dd8261127b565b6112e78185611286565b93506112f7818560208601611297565b611300816112c1565b840191505092915050565b6000606083016000830151611323600086018261126c565b506020830151848203602086015261133b82826112d2565b9150506040830151848203604086015261135582826112d2565b9150508091505092915050565b600061136e838361130b565b905092915050565b6000602082019050919050565b600061138e82611240565b611398818561124b565b9350836020820285016113aa8561125c565b8060005b858110156113e657848403895281516113c78582611362565b94506113d283611376565b925060208a019950506001810190506113ae565b50829750879550505050505092915050565b600060208201905081810360008301526114128184611383565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61144f816110b2565b82525050565b60006114618383611446565b60208301905092915050565b6000602082019050919050565b60006114858261141a565b61148f8185611425565b935061149a83611436565b8060005b838110156114cb5781516114b28882611455565b97506114bd8361146d565b92505060018101905061149e565b5085935050505092915050565b600060208201905081810360008301526114f2818461147a565b905092915050565b60008060006060848603121561151357611512611023565b5b600061152186828701611131565b935050602061153286828701611131565b925050604061154386828701611167565b9150509250925092565b61155681611146565b82525050565b6000602082019050611571600083018461154d565b92915050565b611580816110b2565b811461158b57600080fd5b50565b60008135905061159d81611577565b92915050565b600080604083850312156115ba576115b9611023565b5b60006115c885828601611131565b92505060206115d98582860161158e565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112611608576116076115e3565b5b8235905067ffffffffffffffff811115611625576116246115e8565b5b602083019150836001820283011115611641576116406115ed565b5b9250929050565b60008060008060006080868803121561166457611663611023565b5b600061167288828901611131565b955050602061168388828901611131565b945050604061169488828901611167565b935050606086013567ffffffffffffffff8111156116b5576116b4611028565b5b6116c1888289016115f2565b92509250509295509295909350565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61170d826112c1565b810181811067ffffffffffffffff8211171561172c5761172b6116d5565b5b80604052505050565b600061173f611019565b905061174b8282611704565b919050565b600067ffffffffffffffff82111561176b5761176a6116d5565b5b611774826112c1565b9050602081019050919050565b82818337600083830152505050565b60006117a361179e84611750565b611735565b9050828152602081018484840111156117bf576117be6116d0565b5b6117ca848285611781565b509392505050565b600082601f8301126117e7576117e66115e3565b5b81356117f7848260208601611790565b91505092915050565b6000806000806080858703121561181a57611819611023565b5b600061182887828801611167565b945050602061183987828801611131565b935050604085013567ffffffffffffffff81111561185a57611859611028565b5b611866878288016117d2565b925050606085013567ffffffffffffffff81111561188757611886611028565b5b611893878288016117d2565b91505092959194509250565b600080604083850312156118b6576118b5611023565b5b60006118c485828601611131565b92505060206118d585828601611131565b9150509250929050565b600082825260208201905092915050565b7f5342540000000000000000000000000000000000000000000000000000000000600082015250565b60006119266003836118df565b9150611931826118f0565b602082019050919050565b6000602082019050818103600083015261195581611919565b9050919050565b600082825260208201905092915050565b50565b600061197d60008361195c565b91506119888261196d565b600082019050919050565b60006080820190506119a860008301866111e9565b6119b560208301856111e9565b6119c2604083018461154d565b81810360608301526119d381611970565b9050949350505050565b6000815190506119ec81611059565b92915050565b600060208284031215611a0857611a07611023565b5b6000611a16848285016119dd565b91505092915050565b7f756e7361666520726563697069656e7400000000000000000000000000000000600082015250565b6000611a556010836118df565b9150611a6082611a1f565b602082019050919050565b60006020820190508181036000830152611a8481611a48565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611af482611146565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b2657611b25611aba565b5b600182019050919050565b7f6f776e6572203d207a65726f2061646472657373000000000000000000000000600082015250565b6000611b676014836118df565b9150611b7282611b31565b602082019050919050565b60006020820190508181036000830152611b9681611b5a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611be457607f821691505b602082108103611bf757611bf6611b9d565b5b50919050565b6000611c09838561195c565b9350611c16838584611781565b611c1f836112c1565b840190509392505050565b6000608082019050611c3f60008301886111e9565b611c4c60208301876111e9565b611c59604083018661154d565b8181036060830152611c6c818486611bfd565b90509695505050505050565b7f4944203d3d206f6e6c7920302c312c3220000000000000000000000000000000600082015250565b6000611cae6011836118df565b9150611cb982611c78565b602082019050919050565b60006020820190508181036000830152611cdd81611ca1565b9050919050565b7f6d696e7420746f207a65726f2061646472657373000000000000000000000000600082015250565b6000611d1a6014836118df565b9150611d2582611ce4565b602082019050919050565b60006020820190508181036000830152611d4981611d0d565b9050919050565b7f416c7265616479204d696e746564000000000000000000000000000000000000600082015250565b6000611d86600e836118df565b9150611d9182611d50565b602082019050919050565b60006020820190508181036000830152611db581611d79565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611e1e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611de1565b611e288683611de1565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611e65611e60611e5b84611146565b611e40565b611146565b9050919050565b6000819050919050565b611e7f83611e4a565b611e93611e8b82611e6c565b848454611dee565b825550505050565b600090565b611ea8611e9b565b611eb3818484611e76565b505050565b5b81811015611ed757611ecc600082611ea0565b600181019050611eb9565b5050565b601f821115611f1c57611eed81611dbc565b611ef684611dd1565b81016020851015611f05578190505b611f19611f1185611dd1565b830182611eb8565b50505b505050565b600082821c905092915050565b6000611f3f60001984600802611f21565b1980831691505092915050565b6000611f588383611f2e565b9150826002028217905092915050565b611f718261127b565b67ffffffffffffffff811115611f8a57611f896116d5565b5b611f948254611bcc565b611f9f828285611edb565b600060209050601f831160018114611fd25760008415611fc0578287015190505b611fca8582611f4c565b865550612032565b601f198416611fe086611dbc565b60005b8281101561200857848901518255600182019150602085019450602081019050611fe3565b868310156120255784890151612021601f891682611f2e565b8355505b6001600288020188555050505b505050505050565b6000606083016000830151612052600086018261126c565b506020830151848203602086015261206a82826112d2565b9150506040830151848203604086015261208482826112d2565b9150508091505092915050565b600060208201905081810360008301526120ab818461203a565b90509291505056fea264697066735822122025bb9e034aafc77314bd0bffd06723c4512c2dbca15005c2ea6a9f41027b33e164736f6c63430008110033";

type Web3LearnNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Web3LearnNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Web3LearnNFT__factory extends ContractFactory {
  constructor(...args: Web3LearnNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Web3LearnNFT> {
    return super.deploy(overrides || {}) as Promise<Web3LearnNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Web3LearnNFT {
    return super.attach(address) as Web3LearnNFT;
  }
  override connect(signer: Signer): Web3LearnNFT__factory {
    return super.connect(signer) as Web3LearnNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Web3LearnNFTInterface {
    return new utils.Interface(_abi) as Web3LearnNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Web3LearnNFT {
    return new Contract(address, _abi, signerOrProvider) as Web3LearnNFT;
  }
}
