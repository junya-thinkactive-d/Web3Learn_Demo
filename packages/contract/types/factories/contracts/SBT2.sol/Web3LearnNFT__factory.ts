/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Web3LearnNFT,
  Web3LearnNFTInterface,
} from "../../../contracts/SBT2.sol/Web3LearnNFT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct ERC721.NFT",
        name: "id",
        type: "tuple",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "_getNFT",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct ERC721.NFT[]",
        name: "nfts_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkIsMinted",
    outputs: [
      {
        internalType: "bool[]",
        name: "isMints_",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNFT",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct ERC721.NFT[]",
        name: "nfts",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_url",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f4c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb465146102ce578063b88d4fde146102ea578063e932ad1914610306578063e985e9c514610322576100f5565b80636352211e1461020e5780636e13bd201461023e57806370a082311461026e57806399f110101461029e576100f5565b8063095ea7b3116100d3578063095ea7b31461018a578063161a6c1e146101a657806323b872dd146101d657806342842e0e146101f2576100f5565b806301ffc9a7146100fa57806305bde45e1461012a578063081812fc1461015a575b600080fd5b610114600480360381019061010f9190610f89565b610352565b6040516101219190610fd1565b60405180910390f35b610144600480360381019061013f9190611080565b610424565b6040516101519190610fd1565b60405180910390f35b610174600480360381019061016f91906110c0565b610453565b60405161018191906110fc565b60405180910390f35b6101a4600480360381019061019f9190611080565b61045a565b005b6101c060048036038101906101bb9190611117565b61045e565b6040516101cd91906112da565b60405180910390f35b6101f060048036038101906101eb91906112fc565b610470565b005b61020c600480360381019061020791906112fc565b6104e4565b005b610228600480360381019061022391906110c0565b61061c565b60405161023591906110fc565b60405180910390f35b61025860048036038101906102539190611117565b610623565b604051610265919061140d565b60405180910390f35b61028860048036038101906102839190611117565b6106cd565b604051610295919061143e565b60405180910390f35b6102b860048036038101906102b39190611117565b610784565b6040516102c591906112da565b60405180910390f35b6102e860048036038101906102e39190611485565b610945565b005b61030460048036038101906102ff919061152a565b610a42565b005b610320600480360381019061031b91906116e2565b610bef565b005b61033c60048036038101906103379190611781565b610c01565b6040516103499190610fd1565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041d57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000919050565b5050565b606061046982610784565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d69061181e565b60405180910390fd5b505050565b6104ef838383610470565b60008273ffffffffffffffffffffffffffffffffffffffff163b14806105d8575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161057493929190611875565b6020604051808303816000875af1158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b791906118d4565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e9061194d565b60405180910390fd5b505050565b6000919050565b606060005b60038110156106c757600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff168282815181106106a2576106a161196d565b5b60200260200101901515908115158152505080806106bf906119cb565b915050610628565b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361073d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073490611a5f565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561093a578382906000526020600020906002020160405180604001604052908160008201805461081790611aae565b80601f016020809104026020016040519081016040528092919081815260200182805461084390611aae565b80156108905780601f1061086557610100808354040283529160200191610890565b820191906000526020600020905b81548152906001019060200180831161087357829003601f168201915b505050505081526020016001820180546108a990611aae565b80601f01602080910402602001604051908101604052809291908181526020018280546108d590611aae565b80156109225780601f106108f757610100808354040283529160200191610922565b820191906000526020600020905b81548152906001019060200180831161090557829003601f168201915b505050505081525050815260200190600101906107e4565b505050509050919050565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610a369190610fd1565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa89061181e565b60405180910390fd5b610abc858585610470565b60008473ffffffffffffffffffffffffffffffffffffffff163b1480610ba9575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b8152600401610b45959493929190611b0c565b6020604051808303816000875af1158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8891906118d4565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610be8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdf9061194d565b60405180910390fd5b5050505050565b610bfb84848484610c30565b50505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9690611ba6565b60405180910390fd5b60011515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060009054906101000a900460ff16151503610d43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3a90611c12565b60405180910390fd5b60006040518060400160405280848152602001838152509050600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610dac906119cb565b91905055506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019081610e2e9190611dde565b506020820151816001019081610e449190611dde565b5050506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f9bf9f890f1b3bbd43af3baaf6d54ded24f445f2f19a1f7b173593576e72687ee83604051610f0e9190611ef4565b60405180910390a35050505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f6681610f31565b8114610f7157600080fd5b50565b600081359050610f8381610f5d565b92915050565b600060208284031215610f9f57610f9e610f27565b5b6000610fad84828501610f74565b91505092915050565b60008115159050919050565b610fcb81610fb6565b82525050565b6000602082019050610fe66000830184610fc2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061101782610fec565b9050919050565b6110278161100c565b811461103257600080fd5b50565b6000813590506110448161101e565b92915050565b6000819050919050565b61105d8161104a565b811461106857600080fd5b50565b60008135905061107a81611054565b92915050565b6000806040838503121561109757611096610f27565b5b60006110a585828601611035565b92505060206110b68582860161106b565b9150509250929050565b6000602082840312156110d6576110d5610f27565b5b60006110e48482850161106b565b91505092915050565b6110f68161100c565b82525050565b600060208201905061111160008301846110ed565b92915050565b60006020828403121561112d5761112c610f27565b5b600061113b84828501611035565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111aa57808201518184015260208101905061118f565b60008484015250505050565b6000601f19601f8301169050919050565b60006111d282611170565b6111dc818561117b565b93506111ec81856020860161118c565b6111f5816111b6565b840191505092915050565b6000604083016000830151848203600086015261121d82826111c7565b9150506020830151848203602086015261123782826111c7565b9150508091505092915050565b60006112508383611200565b905092915050565b6000602082019050919050565b600061127082611144565b61127a818561114f565b93508360208202850161128c85611160565b8060005b858110156112c857848403895281516112a98582611244565b94506112b483611258565b925060208a01995050600181019050611290565b50829750879550505050505092915050565b600060208201905081810360008301526112f48184611265565b905092915050565b60008060006060848603121561131557611314610f27565b5b600061132386828701611035565b935050602061133486828701611035565b92505060406113458682870161106b565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61138481610fb6565b82525050565b6000611396838361137b565b60208301905092915050565b6000602082019050919050565b60006113ba8261134f565b6113c4818561135a565b93506113cf8361136b565b8060005b838110156114005781516113e7888261138a565b97506113f2836113a2565b9250506001810190506113d3565b5085935050505092915050565b6000602082019050818103600083015261142781846113af565b905092915050565b6114388161104a565b82525050565b6000602082019050611453600083018461142f565b92915050565b61146281610fb6565b811461146d57600080fd5b50565b60008135905061147f81611459565b92915050565b6000806040838503121561149c5761149b610f27565b5b60006114aa85828601611035565b92505060206114bb85828601611470565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f8401126114ea576114e96114c5565b5b8235905067ffffffffffffffff811115611507576115066114ca565b5b602083019150836001820283011115611523576115226114cf565b5b9250929050565b60008060008060006080868803121561154657611545610f27565b5b600061155488828901611035565b955050602061156588828901611035565b94505060406115768882890161106b565b935050606086013567ffffffffffffffff81111561159757611596610f2c565b5b6115a3888289016114d4565b92509250509295509295909350565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6115ef826111b6565b810181811067ffffffffffffffff8211171561160e5761160d6115b7565b5b80604052505050565b6000611621610f1d565b905061162d82826115e6565b919050565b600067ffffffffffffffff82111561164d5761164c6115b7565b5b611656826111b6565b9050602081019050919050565b82818337600083830152505050565b600061168561168084611632565b611617565b9050828152602081018484840111156116a1576116a06115b2565b5b6116ac848285611663565b509392505050565b600082601f8301126116c9576116c86114c5565b5b81356116d9848260208601611672565b91505092915050565b600080600080608085870312156116fc576116fb610f27565b5b600061170a8782880161106b565b945050602061171b87828801611035565b935050604085013567ffffffffffffffff81111561173c5761173b610f2c565b5b611748878288016116b4565b925050606085013567ffffffffffffffff81111561176957611768610f2c565b5b611775878288016116b4565b91505092959194509250565b6000806040838503121561179857611797610f27565b5b60006117a685828601611035565b92505060206117b785828601611035565b9150509250929050565b600082825260208201905092915050565b7f5342540000000000000000000000000000000000000000000000000000000000600082015250565b60006118086003836117c1565b9150611813826117d2565b602082019050919050565b60006020820190508181036000830152611837816117fb565b9050919050565b600082825260208201905092915050565b50565b600061185f60008361183e565b915061186a8261184f565b600082019050919050565b600060808201905061188a60008301866110ed565b61189760208301856110ed565b6118a4604083018461142f565b81810360608301526118b581611852565b9050949350505050565b6000815190506118ce81610f5d565b92915050565b6000602082840312156118ea576118e9610f27565b5b60006118f8848285016118bf565b91505092915050565b7f756e7361666520726563697069656e7400000000000000000000000000000000600082015250565b60006119376010836117c1565b915061194282611901565b602082019050919050565b600060208201905081810360008301526119668161192a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119d68261104a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a0857611a0761199c565b5b600182019050919050565b7f6f776e6572203d207a65726f2061646472657373000000000000000000000000600082015250565b6000611a496014836117c1565b9150611a5482611a13565b602082019050919050565b60006020820190508181036000830152611a7881611a3c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ac657607f821691505b602082108103611ad957611ad8611a7f565b5b50919050565b6000611aeb838561183e565b9350611af8838584611663565b611b01836111b6565b840190509392505050565b6000608082019050611b2160008301886110ed565b611b2e60208301876110ed565b611b3b604083018661142f565b8181036060830152611b4e818486611adf565b90509695505050505050565b7f6d696e7420746f207a65726f2061646472657373000000000000000000000000600082015250565b6000611b906014836117c1565b9150611b9b82611b5a565b602082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f416c7265616479204d696e746564000000000000000000000000000000000000600082015250565b6000611bfc600e836117c1565b9150611c0782611bc6565b602082019050919050565b60006020820190508181036000830152611c2b81611bef565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611c947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c57565b611c9e8683611c57565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611cdb611cd6611cd18461104a565b611cb6565b61104a565b9050919050565b6000819050919050565b611cf583611cc0565b611d09611d0182611ce2565b848454611c64565b825550505050565b600090565b611d1e611d11565b611d29818484611cec565b505050565b5b81811015611d4d57611d42600082611d16565b600181019050611d2f565b5050565b601f821115611d9257611d6381611c32565b611d6c84611c47565b81016020851015611d7b578190505b611d8f611d8785611c47565b830182611d2e565b50505b505050565b600082821c905092915050565b6000611db560001984600802611d97565b1980831691505092915050565b6000611dce8383611da4565b9150826002028217905092915050565b611de782611170565b67ffffffffffffffff811115611e0057611dff6115b7565b5b611e0a8254611aae565b611e15828285611d51565b600060209050601f831160018114611e485760008415611e36578287015190505b611e408582611dc2565b865550611ea8565b601f198416611e5686611c32565b60005b82811015611e7e57848901518255600182019150602085019450602081019050611e59565b86831015611e9b5784890151611e97601f891682611da4565b8355505b6001600288020188555050505b505050505050565b60006040830160008301518482036000860152611ecd82826111c7565b91505060208301518482036020860152611ee782826111c7565b9150508091505092915050565b60006020820190508181036000830152611f0e8184611eb0565b90509291505056fea26469706673582212200f1a74e349176766ffb05c595341bd54c41fc93a08e6e488347e09d36f4c6fce64736f6c63430008110033";

type Web3LearnNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Web3LearnNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Web3LearnNFT__factory extends ContractFactory {
  constructor(...args: Web3LearnNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Web3LearnNFT> {
    return super.deploy(overrides || {}) as Promise<Web3LearnNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Web3LearnNFT {
    return super.attach(address) as Web3LearnNFT;
  }
  override connect(signer: Signer): Web3LearnNFT__factory {
    return super.connect(signer) as Web3LearnNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Web3LearnNFTInterface {
    return new utils.Interface(_abi) as Web3LearnNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Web3LearnNFT {
    return new Contract(address, _abi, signerOrProvider) as Web3LearnNFT;
  }
}
