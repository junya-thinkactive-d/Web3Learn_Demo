/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721,
  ERC721Interface,
} from "../../../contracts/SBT2.sol/ERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct ERC721.NFT",
        name: "id",
        type: "tuple",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "_getNFT",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct ERC721.NFT[]",
        name: "nfts_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061135e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636352211e116100715780636352211e1461016257806370a082311461019257806399f11010146101c2578063a22cb465146101f2578063b88d4fde1461020e578063e985e9c51461022a576100a9565b806301ffc9a7146100ae578063081812fc146100de578063095ea7b31461010e57806323b872dd1461012a57806342842e0e14610146575b600080fd5b6100c860048036038101906100c39190610a9d565b61025a565b6040516100d59190610ae5565b60405180910390f35b6100f860048036038101906100f39190610b36565b61032c565b6040516101059190610ba4565b60405180910390f35b61012860048036038101906101239190610beb565b610333565b005b610144600480360381019061013f9190610c2b565b610337565b005b610160600480360381019061015b9190610c2b565b6103ab565b005b61017c60048036038101906101779190610b36565b6104e3565b6040516101899190610ba4565b60405180910390f35b6101ac60048036038101906101a79190610c7e565b6104ea565b6040516101b99190610cba565b60405180910390f35b6101dc60048036038101906101d79190610c7e565b6105a1565b6040516101e99190610e6b565b60405180910390f35b61020c60048036038101906102079190610eb9565b610762565b005b61022860048036038101906102239190610f5e565b61085f565b005b610244600480360381019061023f9190610fe6565b610a0c565b6040516102519190610ae5565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061032557507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000919050565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039d90611083565b60405180910390fd5b505050565b6103b6838383610337565b60008273ffffffffffffffffffffffffffffffffffffffff163b148061049f575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b815260040161043b939291906110da565b6020604051808303816000875af115801561045a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047e9190611139565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6104de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d5906111b2565b60405180910390fd5b505050565b6000919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361055a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105519061121e565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561075757838290600052602060002090600202016040518060400160405290816000820180546106349061126d565b80601f01602080910402602001604051908101604052809291908181526020018280546106609061126d565b80156106ad5780601f10610682576101008083540402835291602001916106ad565b820191906000526020600020905b81548152906001019060200180831161069057829003601f168201915b505050505081526020016001820180546106c69061126d565b80601f01602080910402602001604051908101604052809291908181526020018280546106f29061126d565b801561073f5780601f106107145761010080835404028352916020019161073f565b820191906000526020600020905b81548152906001019060200180831161072257829003601f168201915b50505050508152505081526020019060010190610601565b505050509050919050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516108539190610ae5565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146108ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c590611083565b60405180910390fd5b6108d9858585610337565b60008473ffffffffffffffffffffffffffffffffffffffff163b14806109c6575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b81526004016109629594939291906112da565b6020604051808303816000875af1158015610981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a59190611139565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc906111b2565b60405180910390fd5b5050505050565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a7a81610a45565b8114610a8557600080fd5b50565b600081359050610a9781610a71565b92915050565b600060208284031215610ab357610ab2610a3b565b5b6000610ac184828501610a88565b91505092915050565b60008115159050919050565b610adf81610aca565b82525050565b6000602082019050610afa6000830184610ad6565b92915050565b6000819050919050565b610b1381610b00565b8114610b1e57600080fd5b50565b600081359050610b3081610b0a565b92915050565b600060208284031215610b4c57610b4b610a3b565b5b6000610b5a84828501610b21565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8e82610b63565b9050919050565b610b9e81610b83565b82525050565b6000602082019050610bb96000830184610b95565b92915050565b610bc881610b83565b8114610bd357600080fd5b50565b600081359050610be581610bbf565b92915050565b60008060408385031215610c0257610c01610a3b565b5b6000610c1085828601610bd6565b9250506020610c2185828601610b21565b9150509250929050565b600080600060608486031215610c4457610c43610a3b565b5b6000610c5286828701610bd6565b9350506020610c6386828701610bd6565b9250506040610c7486828701610b21565b9150509250925092565b600060208284031215610c9457610c93610a3b565b5b6000610ca284828501610bd6565b91505092915050565b610cb481610b00565b82525050565b6000602082019050610ccf6000830184610cab565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d3b578082015181840152602081019050610d20565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d6382610d01565b610d6d8185610d0c565b9350610d7d818560208601610d1d565b610d8681610d47565b840191505092915050565b60006040830160008301518482036000860152610dae8282610d58565b91505060208301518482036020860152610dc88282610d58565b9150508091505092915050565b6000610de18383610d91565b905092915050565b6000602082019050919050565b6000610e0182610cd5565b610e0b8185610ce0565b935083602082028501610e1d85610cf1565b8060005b85811015610e595784840389528151610e3a8582610dd5565b9450610e4583610de9565b925060208a01995050600181019050610e21565b50829750879550505050505092915050565b60006020820190508181036000830152610e858184610df6565b905092915050565b610e9681610aca565b8114610ea157600080fd5b50565b600081359050610eb381610e8d565b92915050565b60008060408385031215610ed057610ecf610a3b565b5b6000610ede85828601610bd6565b9250506020610eef85828601610ea4565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f840112610f1e57610f1d610ef9565b5b8235905067ffffffffffffffff811115610f3b57610f3a610efe565b5b602083019150836001820283011115610f5757610f56610f03565b5b9250929050565b600080600080600060808688031215610f7a57610f79610a3b565b5b6000610f8888828901610bd6565b9550506020610f9988828901610bd6565b9450506040610faa88828901610b21565b935050606086013567ffffffffffffffff811115610fcb57610fca610a40565b5b610fd788828901610f08565b92509250509295509295909350565b60008060408385031215610ffd57610ffc610a3b565b5b600061100b85828601610bd6565b925050602061101c85828601610bd6565b9150509250929050565b600082825260208201905092915050565b7f5342540000000000000000000000000000000000000000000000000000000000600082015250565b600061106d600383611026565b915061107882611037565b602082019050919050565b6000602082019050818103600083015261109c81611060565b9050919050565b600082825260208201905092915050565b50565b60006110c46000836110a3565b91506110cf826110b4565b600082019050919050565b60006080820190506110ef6000830186610b95565b6110fc6020830185610b95565b6111096040830184610cab565b818103606083015261111a816110b7565b9050949350505050565b60008151905061113381610a71565b92915050565b60006020828403121561114f5761114e610a3b565b5b600061115d84828501611124565b91505092915050565b7f756e7361666520726563697069656e7400000000000000000000000000000000600082015250565b600061119c601083611026565b91506111a782611166565b602082019050919050565b600060208201905081810360008301526111cb8161118f565b9050919050565b7f6f776e6572203d207a65726f2061646472657373000000000000000000000000600082015250565b6000611208601483611026565b9150611213826111d2565b602082019050919050565b60006020820190508181036000830152611237816111fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128557607f821691505b6020821081036112985761129761123e565b5b50919050565b82818337600083830152505050565b60006112b983856110a3565b93506112c683858461129e565b6112cf83610d47565b840190509392505050565b60006080820190506112ef6000830188610b95565b6112fc6020830187610b95565b6113096040830186610cab565b818103606083015261131c8184866112ad565b9050969550505050505056fea26469706673582212203091b13ea27b5c39d09ad418a8abf99fe23ffe578d939e1eb358500eaed8676864736f6c63430008110033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
