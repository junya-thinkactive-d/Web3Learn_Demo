/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Web3Learn,
  Web3LearnInterface,
} from "../../../contracts/Web3LearnPub.sol/Web3Learn";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SetSplit",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "ratio",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
        ],
        internalType: "struct Web3Learn.Split[]",
        name: "splits",
        type: "tuple[]",
      },
    ],
    name: "_checkRatio",
    outputs: [
      {
        internalType: "bool",
        name: "isValid_",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "_getReward",
    outputs: [
      {
        internalType: "uint256",
        name: "canClaimAmount_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "_isWhitelistedToken",
    outputs: [
      {
        internalType: "bool",
        name: "isWhitelisted_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "ratio",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "payee",
            type: "address",
          },
        ],
        internalType: "struct Web3Learn.Split[]",
        name: "splits",
        type: "tuple[]",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claimReard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506117a0806100696000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610111578063d647fc241461012f578063f80f5dd51461015f578063fe537ca21461017b57610088565b80633187a2871461008d5780634be98f94146100a957806378c8cda7146100d957806380355aa1146100f5575b600080fd5b6100a760048036038101906100a29190610fe1565b6101ab565b005b6100c360048036038101906100be9190611050565b6103bb565b6040516100d0919061109f565b60405180910390f35b6100f360048036038101906100ee91906110ba565b610442565b005b61010f600480360381019061010a91906110e7565b6104f7565b005b6101196105bf565b6040516101269190611148565b60405180910390f35b61014960048036038101906101449190611163565b6105e5565b60405161015691906111c7565b60405180910390f35b610179600480360381019061017491906110ba565b61063e565b005b610195600480360381019061019091906110ba565b6106f3565b6040516101a291906111c7565b60405180910390f35b6101b3610749565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661020957600080fd5b610212816105e5565b61021b57600080fd5b600030905060008373ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161025b91906111f1565b602060405180830381865afa158015610278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029c9190611221565b90506102aa84338488610798565b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016102e591906111f1565b602060405180830381865afa158015610302573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103269190611221565b905060008282610336919061127d565b9050610343868287610821565b868673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f251183b9c2b842c80f376686f0f21acd10da77772f5eef8eb0de739a35220c3060016040516103a291906111c7565b60405180910390a4505050506103b6610a67565b505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049c57600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6104ff610749565b61050933836103bb565b81111561051557600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105a1919061127d565b925050819055506105b3823383610a71565b6105bb610a67565b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080825190506000805b8281101561062f5784818151811061060b5761060a6112b1565b5b6020026020010151600001518261062291906112e0565b91508060010190506105f0565b50612710811492505050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069857600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60026000540361078e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078590611371565b60405180910390fd5b6002600081905550565b61081b846323b872dd60e01b8585856040516024016107b993929190611391565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610af7565b50505050565b6000815190506000805b828110156109b257600061271085838151811061084b5761084a6112b1565b5b6020026020010151600001518761086291906113c8565b61086c9190611439565b90508060036000878581518110610886576108856112b1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461091891906112e0565b92505081905550808361092b91906112e0565b9250816001019150808773ffffffffffffffffffffffffffffffffffffffff1686848151811061095e5761095d6112b1565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff167fc63b194ef2132e5904173b81b08d724b4a89cbea7cccc6faf99f5e2c33f2a68360405160405180910390a45061082b565b50600081856109c1919061127d565b905060008114610a5f5780600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a5791906112e0565b925050819055505b505050505050565b6001600081905550565b610af28363a9059cbb60e01b8484604051602401610a9092919061146a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610af7565b505050565b6000610b59826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610bbe9092919063ffffffff16565b9050600081511115610bb95780806020019051810190610b7991906114bf565b610bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baf9061155e565b60405180910390fd5b5b505050565b6060610bcd8484600085610bd6565b90509392505050565b606082471015610c1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c12906115f0565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610c449190611681565b60006040518083038185875af1925050503d8060008114610c81576040519150601f19603f3d011682016040523d82523d6000602084013e610c86565b606091505b5091509150610c9787838387610ca3565b92505050949350505050565b60608315610d05576000835103610cfd57610cbd85610d18565b610cfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf3906116e4565b60405180910390fd5b5b829050610d10565b610d0f8383610d3b565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610d4e5781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d829190611748565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610db281610d9f565b8114610dbd57600080fd5b50565b600081359050610dcf81610da9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0082610dd5565b9050919050565b610e1081610df5565b8114610e1b57600080fd5b50565b600081359050610e2d81610e07565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e8182610e38565b810181811067ffffffffffffffff82111715610ea057610e9f610e49565b5b80604052505050565b6000610eb3610d8b565b9050610ebf8282610e78565b919050565b600067ffffffffffffffff821115610edf57610ede610e49565b5b602082029050602081019050919050565b600080fd5b600080fd5b600060408284031215610f1057610f0f610ef5565b5b610f1a6040610ea9565b90506000610f2a84828501610dc0565b6000830152506020610f3e84828501610e1e565b60208301525092915050565b6000610f5d610f5884610ec4565b610ea9565b90508083825260208201905060408402830185811115610f8057610f7f610ef0565b5b835b81811015610fa95780610f958882610efa565b845260208401935050604081019050610f82565b5050509392505050565b600082601f830112610fc857610fc7610e33565b5b8135610fd8848260208601610f4a565b91505092915050565b600080600060608486031215610ffa57610ff9610d95565b5b600061100886828701610dc0565b935050602061101986828701610e1e565b925050604084013567ffffffffffffffff81111561103a57611039610d9a565b5b61104686828701610fb3565b9150509250925092565b6000806040838503121561106757611066610d95565b5b600061107585828601610e1e565b925050602061108685828601610e1e565b9150509250929050565b61109981610d9f565b82525050565b60006020820190506110b46000830184611090565b92915050565b6000602082840312156110d0576110cf610d95565b5b60006110de84828501610e1e565b91505092915050565b600080604083850312156110fe576110fd610d95565b5b600061110c85828601610e1e565b925050602061111d85828601610dc0565b9150509250929050565b600061113282610dd5565b9050919050565b61114281611127565b82525050565b600060208201905061115d6000830184611139565b92915050565b60006020828403121561117957611178610d95565b5b600082013567ffffffffffffffff81111561119757611196610d9a565b5b6111a384828501610fb3565b91505092915050565b60008115159050919050565b6111c1816111ac565b82525050565b60006020820190506111dc60008301846111b8565b92915050565b6111eb81610df5565b82525050565b600060208201905061120660008301846111e2565b92915050565b60008151905061121b81610da9565b92915050565b60006020828403121561123757611236610d95565b5b60006112458482850161120c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061128882610d9f565b915061129383610d9f565b92508282039050818111156112ab576112aa61124e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006112eb82610d9f565b91506112f683610d9f565b925082820190508082111561130e5761130d61124e565b5b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061135b601f83611314565b915061136682611325565b602082019050919050565b6000602082019050818103600083015261138a8161134e565b9050919050565b60006060820190506113a660008301866111e2565b6113b360208301856111e2565b6113c06040830184611090565b949350505050565b60006113d382610d9f565b91506113de83610d9f565b92508282026113ec81610d9f565b915082820484148315176114035761140261124e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061144482610d9f565b915061144f83610d9f565b92508261145f5761145e61140a565b5b828204905092915050565b600060408201905061147f60008301856111e2565b61148c6020830184611090565b9392505050565b61149c816111ac565b81146114a757600080fd5b50565b6000815190506114b981611493565b92915050565b6000602082840312156114d5576114d4610d95565b5b60006114e3848285016114aa565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611548602a83611314565b9150611553826114ec565b604082019050919050565b600060208201905081810360008301526115778161153b565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006115da602683611314565b91506115e58261157e565b604082019050919050565b60006020820190508181036000830152611609816115cd565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611644578082015181840152602081019050611629565b60008484015250505050565b600061165b82611610565b611665818561161b565b9350611675818560208601611626565b80840191505092915050565b600061168d8284611650565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006116ce601d83611314565b91506116d982611698565b602082019050919050565b600060208201905081810360008301526116fd816116c1565b9050919050565b600081519050919050565b600061171a82611704565b6117248185611314565b9350611734818560208601611626565b61173d81610e38565b840191505092915050565b60006020820190508181036000830152611762818461170f565b90509291505056fea2646970667358221220632d9dfc6dd4dd2aeeccb5dcf8dcc018547bdb15abeae9219419e8c74669b8cc64736f6c63430008110033";

type Web3LearnConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Web3LearnConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Web3Learn__factory extends ContractFactory {
  constructor(...args: Web3LearnConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Web3Learn> {
    return super.deploy(overrides || {}) as Promise<Web3Learn>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Web3Learn {
    return super.attach(address) as Web3Learn;
  }
  override connect(signer: Signer): Web3Learn__factory {
    return super.connect(signer) as Web3Learn__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Web3LearnInterface {
    return new utils.Interface(_abi) as Web3LearnInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Web3Learn {
    return new Contract(address, _abi, signerOrProvider) as Web3Learn;
  }
}
