/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721,
  ERC721Interface,
} from "../../../contracts/SBT2.sol/ERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct ERC721.NFT",
        name: "id",
        type: "tuple",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "_getNFT",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct ERC721.NFT[]",
        name: "nfts_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkIsMinted",
    outputs: [
      {
        internalType: "bool[]",
        name: "isMints_",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611643806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c57806399f110101161006657806399f1101014610248578063a22cb46514610278578063b88d4fde14610294578063e985e9c5146102b0576100cf565b80636352211e146101b85780636e13bd20146101e857806370a0823114610218576100cf565b806301ffc9a7146100d457806305bde45e14610104578063081812fc14610134578063095ea7b31461016457806323b872dd1461018057806342842e0e1461019c575b600080fd5b6100ee60048036038101906100e99190610bfc565b6102e0565b6040516100fb9190610c44565b60405180910390f35b61011e60048036038101906101199190610cf3565b6103b2565b60405161012b9190610c44565b60405180910390f35b61014e60048036038101906101499190610d33565b6103e1565b60405161015b9190610d6f565b60405180910390f35b61017e60048036038101906101799190610cf3565b6103e8565b005b61019a60048036038101906101959190610d8a565b6103ec565b005b6101b660048036038101906101b19190610d8a565b610460565b005b6101d260048036038101906101cd9190610d33565b610598565b6040516101df9190610d6f565b60405180910390f35b61020260048036038101906101fd9190610ddd565b61059f565b60405161020f9190610ec8565b60405180910390f35b610232600480360381019061022d9190610ddd565b610649565b60405161023f9190610ef9565b60405180910390f35b610262600480360381019061025d9190610ddd565b610700565b60405161026f91906110aa565b60405180910390f35b610292600480360381019061028d91906110f8565b6108c1565b005b6102ae60048036038101906102a9919061119d565b6109be565b005b6102ca60048036038101906102c59190611225565b610b6b565b6040516102d79190610c44565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103ab57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000919050565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461045b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610452906112c2565b60405180910390fd5b505050565b61046b8383836103ec565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480610554575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b81526004016104f093929190611319565b6020604051808303816000875af115801561050f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105339190611378565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058a906113f1565b60405180910390fd5b505050565b6000919050565b606060005b600381101561064357600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff1682828151811061061e5761061d611411565b5b602002602001019015159081151581525050808061063b9061146f565b9150506105a4565b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b090611503565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156108b6578382906000526020600020906002020160405180604001604052908160008201805461079390611552565b80601f01602080910402602001604051908101604052809291908181526020018280546107bf90611552565b801561080c5780601f106107e15761010080835404028352916020019161080c565b820191906000526020600020905b8154815290600101906020018083116107ef57829003601f168201915b5050505050815260200160018201805461082590611552565b80601f016020809104026020016040519081016040528092919081815260200182805461085190611552565b801561089e5780601f106108735761010080835404028352916020019161089e565b820191906000526020600020905b81548152906001019060200180831161088157829003601f168201915b50505050508152505081526020019060010190610760565b505050509050919050565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516109b29190610c44565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610a2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a24906112c2565b60405180910390fd5b610a388585856103ec565b60008473ffffffffffffffffffffffffffffffffffffffff163b1480610b25575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b8152600401610ac19594939291906115bf565b6020604051808303816000875af1158015610ae0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b049190611378565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610b64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5b906113f1565b60405180910390fd5b5050505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610bd981610ba4565b8114610be457600080fd5b50565b600081359050610bf681610bd0565b92915050565b600060208284031215610c1257610c11610b9a565b5b6000610c2084828501610be7565b91505092915050565b60008115159050919050565b610c3e81610c29565b82525050565b6000602082019050610c596000830184610c35565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8a82610c5f565b9050919050565b610c9a81610c7f565b8114610ca557600080fd5b50565b600081359050610cb781610c91565b92915050565b6000819050919050565b610cd081610cbd565b8114610cdb57600080fd5b50565b600081359050610ced81610cc7565b92915050565b60008060408385031215610d0a57610d09610b9a565b5b6000610d1885828601610ca8565b9250506020610d2985828601610cde565b9150509250929050565b600060208284031215610d4957610d48610b9a565b5b6000610d5784828501610cde565b91505092915050565b610d6981610c7f565b82525050565b6000602082019050610d846000830184610d60565b92915050565b600080600060608486031215610da357610da2610b9a565b5b6000610db186828701610ca8565b9350506020610dc286828701610ca8565b9250506040610dd386828701610cde565b9150509250925092565b600060208284031215610df357610df2610b9a565b5b6000610e0184828501610ca8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e3f81610c29565b82525050565b6000610e518383610e36565b60208301905092915050565b6000602082019050919050565b6000610e7582610e0a565b610e7f8185610e15565b9350610e8a83610e26565b8060005b83811015610ebb578151610ea28882610e45565b9750610ead83610e5d565b925050600181019050610e8e565b5085935050505092915050565b60006020820190508181036000830152610ee28184610e6a565b905092915050565b610ef381610cbd565b82525050565b6000602082019050610f0e6000830184610eea565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f7a578082015181840152602081019050610f5f565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fa282610f40565b610fac8185610f4b565b9350610fbc818560208601610f5c565b610fc581610f86565b840191505092915050565b60006040830160008301518482036000860152610fed8282610f97565b915050602083015184820360208601526110078282610f97565b9150508091505092915050565b60006110208383610fd0565b905092915050565b6000602082019050919050565b600061104082610f14565b61104a8185610f1f565b93508360208202850161105c85610f30565b8060005b8581101561109857848403895281516110798582611014565b945061108483611028565b925060208a01995050600181019050611060565b50829750879550505050505092915050565b600060208201905081810360008301526110c48184611035565b905092915050565b6110d581610c29565b81146110e057600080fd5b50565b6000813590506110f2816110cc565b92915050565b6000806040838503121561110f5761110e610b9a565b5b600061111d85828601610ca8565b925050602061112e858286016110e3565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f84011261115d5761115c611138565b5b8235905067ffffffffffffffff81111561117a5761117961113d565b5b60208301915083600182028301111561119657611195611142565b5b9250929050565b6000806000806000608086880312156111b9576111b8610b9a565b5b60006111c788828901610ca8565b95505060206111d888828901610ca8565b94505060406111e988828901610cde565b935050606086013567ffffffffffffffff81111561120a57611209610b9f565b5b61121688828901611147565b92509250509295509295909350565b6000806040838503121561123c5761123b610b9a565b5b600061124a85828601610ca8565b925050602061125b85828601610ca8565b9150509250929050565b600082825260208201905092915050565b7f5342540000000000000000000000000000000000000000000000000000000000600082015250565b60006112ac600383611265565b91506112b782611276565b602082019050919050565b600060208201905081810360008301526112db8161129f565b9050919050565b600082825260208201905092915050565b50565b60006113036000836112e2565b915061130e826112f3565b600082019050919050565b600060808201905061132e6000830186610d60565b61133b6020830185610d60565b6113486040830184610eea565b8181036060830152611359816112f6565b9050949350505050565b60008151905061137281610bd0565b92915050565b60006020828403121561138e5761138d610b9a565b5b600061139c84828501611363565b91505092915050565b7f756e7361666520726563697069656e7400000000000000000000000000000000600082015250565b60006113db601083611265565b91506113e6826113a5565b602082019050919050565b6000602082019050818103600083015261140a816113ce565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061147a82610cbd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114ac576114ab611440565b5b600182019050919050565b7f6f776e6572203d207a65726f2061646472657373000000000000000000000000600082015250565b60006114ed601483611265565b91506114f8826114b7565b602082019050919050565b6000602082019050818103600083015261151c816114e0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061156a57607f821691505b60208210810361157d5761157c611523565b5b50919050565b82818337600083830152505050565b600061159e83856112e2565b93506115ab838584611583565b6115b483610f86565b840190509392505050565b60006080820190506115d46000830188610d60565b6115e16020830187610d60565b6115ee6040830186610eea565b8181036060830152611601818486611592565b9050969550505050505056fea2646970667358221220b4248d5eed63d228c00099bfb039c9fa773457db8915e8b07aa36e4d4f678ec364736f6c63430008110033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
